--In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customers and their orders. 

--How many many unique orders were placed in January?
SELECT COUNT(orderid)
FROM Bit_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--How many of those orders were for an iPhone?
SELECT COUNT(distinct orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

--Select the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--Which product was the cheapest one sold in January, and what was the price?
SELECT product, min(price)
FROM BIT_DB.JanSales Jan
GROUP BY product, price
ORDER BY price ASC
LIMIT 1;

--What is the total revenue for each product sold in January?
SELECT sum(quantity)*price as revenue
,product
FROM BIT_DB.JanSales
GROUP BY product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT
sum(Quantity),
product,
sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT
count(distinct cust.acctnum),
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';

--Filter orders through dates, 2-3-19 to 2-18-19.
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

--Filter orders through 2-18-29 at 1:35.
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

--Filter order to show order date starting at 2-18-19. 
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

--Filter through the products to show all items that are Batteries.
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

--Show all the different products that end in 99 cents.
SELECT Distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

--List all the products sold in Los Angeles in February, and include how many of each were sold.
Select Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP By Product;


--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT location, COUNT(*) AS order_count
FROM BIT_DB.JanSales
WHERE location like '%New York%'
GROUP BY location
HAVING COUNT(*) >= 3;

--How many of each type of headphone were sold in February?
SELECT product, SUM(quantity) AS total_sold
FROM BIT_DB.FebSales
Where product like '%headphones%'
GROUP BY product;

--What was the average amount spent per account in February
SELECT sum(quantity*price)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--What was the average quantity of products purchased per account in February?
Select AVG(quantity), acctnum
FROM BIT_DB.FebSales Feb
LEFT Join BIT_DB.customers cust
On Feb.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product, 
sum(quantity*price)
FROM BIT_DB.JanSales 
GROUP BY product
ORDER BY sum(quantity*price) desc 
LIMIT 1;

